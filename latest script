# Connect to Azure using Managed Service Identity (MSI)
Connect-AzAccount -Identity

# Get all Key Vaults in the Azure subscription
$keyVaults = Get-AzKeyVault

# Define excluded Key Vaults (if any)
$excludedKeyVaults = @("KeyVault1", "KeyVault2")

# Loop through each Key Vault
foreach ($keyVault in $keyVaults) {
    $keyVaultName = $keyVault.VaultName

    # Check if Key Vault is excluded
    if ($excludedKeyVaults -contains $keyVaultName) {
        Write-Host "Skipping Key Vault '$keyVaultName' as it is excluded."
        continue
    }

    Write-Host "Processing Key Vault '$keyVaultName'..."

    # Retrieve tags and action groups for the Key Vault
    $keyVaultTags = $keyVault.Tags
    $matchingActionGroups = Get-AzActionGroup | Where-Object {
        $keyVaultTags.GetEnumerator() -contains $_.Tags.GetEnumerator()
    }

    # Check if there are matching action groups
    if ($matchingActionGroups) {
        # Retrieve the list of secrets from the Key Vault
        $secrets = Get-AzKeyVaultSecret -VaultName $keyVaultName

        # Check for secrets without expiry and set default expiry of 90 days
        $secretsWithoutExpiry = $secrets | Where-Object { -not $_.Properties.Expires }
        foreach ($secret in $secretsWithoutExpiry) {
            $secretName = $secret.Name
            $expiryDate = (Get-Date).AddDays(90)

            Write-Host "Setting default expiry of 90 days for secret '$secretName'..."

            # Set default expiry for the secret
            Set-AzKeyVaultSecret -VaultName $keyVaultName -Name $secretName -Expires $expiryDate

            # Notify the matching action groups
            foreach ($actionGroup in $matchingActionGroups) {
                Send-AzActionGroupEmail -ActionGroupId $actionGroup.ActionGroupId -Subject "Secret Expiry Set for '$secretName'" -Body "The secret '$secretName' in Key Vault '$keyVaultName' has been set with a default expiry date of $expiryDate."
            }
        }

        # Check for secrets about to expire in 20 days
        $secretsAboutToExpire = $secrets | Where-Object { $_.Properties.Expires -lt (Get-Date).AddDays(20) }
        foreach ($secret in $secretsAboutToExpire) {
            $secretName = $secret.Name

            # Notify the matching action groups about secrets expiring within 20 days
            foreach ($actionGroup in $matchingActionGroups) {
                Send-AzActionGroupEmail -ActionGroupId $actionGroup.ActionGroupId -Subject "Secret Expiry Warning for '$secretName'" -Body "The secret '$secretName' in Key Vault '$keyVaultName' is about to expire within 20 days."
            }
        }
    }
}

